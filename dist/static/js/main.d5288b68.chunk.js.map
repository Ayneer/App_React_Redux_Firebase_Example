{"version":3,"sources":["components/navbar/EnlacesLogin.js","components/Redux/Acciones/sesionAcciones.js","components/navbar/EnlacesLogout.js","components/navbar/EnlacesLoginAdministrador.js","components/navbar/Navbar.js","components/sesion/IniciarSesion.js","components/Redux/Acciones/clienteAcciones.js","components/sesion/Registrarse.js","components/cliente/Myperfil.js","components/Redux/Acciones/proyectoAcciones.js","components/cliente/NuevoProyecto.js","components/administrador/ClienteVista.js","components/administrador/ListaClientes.js","components/administrador/ProyectoVista.js","components/administrador/ListaProyectos.js","components/administrador/Proyecto.js","App.js","serviceWorker.js","configuracion/configFireBase.js","components/Redux/reducers/autenticacionReducer.js","components/Redux/reducers/proyectosReducer.js","components/Redux/reducers/clientesReducer.js","components/Redux/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","cerrarSesion","getState","getFirebase","auth","signOut","then","type","estado","catch","error","props","console","log","className","to","onClick","EnlacesLogout","state","uid","firebase","profile","isLoaded","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","isEmpty","tipo","IniciarSesion","correo","contrase√±a","onSubmit","evento","preventDefault","iniciarSesion","onChange","name","target","setState","value","this","errorSesion","message","aria-describedby","placeholder","Component","autenticacion","credenciales","getFirestore","signInWithEmailAndPassword","nuevoCliente","cliente","collection","add","Registrarse","nombre","event","cancelar","clientes","errorNuevoCliente","nuevoProyecto","proyecto","NuevoProyecto","nombreProyecto","descripcionProyecto","correoCliente","proyectos","ClienteVista","index","eliminarCliente","ListaClientes","length","map","key","compose","firestore","ordered","firestoreConnect","orderBy","ProyectoVista","ListaProyectos","Proyecto","editar","guardarProyecto","canelarActualizacion","editarProyecto","myProyecto","match","params","data","App","exact","path","component","render","MyPerfil","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","iniState","errorCerrarSesion","autenticacionReducer","action","listaProyectos","proyectosReducer","listaClientes","clientesReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","configFireBase","attachAuthIsReady","rrfProps","config","useFirestoreForProfile","userProfile","createFirestoreInstance","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5288b68.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { cerrarSesion } from '../Redux/Acciones/sesionAcciones';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction EnlacesLogin(props) {\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/myPerfil\">My perfil</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/nuevoProyecto\">Crear nuevo proyecto</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" onClick={props.cerrarSesion} to=\"/salir\">Cerrar Sesion</NavLink>\r\n                </li>   \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        cerrarSesion: () => { dispatch(cerrarSesion()) }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(EnlacesLogin);","export const iniciarSesion = (credenciales) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //funcion o acciones asincronas con la base de datos\r\n        const fireBase = getFirebase();\r\n        fireBase.auth().signInWithEmailAndPassword(\r\n            credenciales.correo,\r\n            credenciales.contrase√±a\r\n        ).then(() => {\r\n            dispatch({ type: \"INICIAR_SESION\", credenciales });\r\n        }).catch((error) => {\r\n            dispatch({ type: \"INICIAR_SESION_ERROR\", error });\r\n        })\r\n    }\r\n}\r\n\r\nexport const cerrarSesion = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        //funcion o acciones asincronas con la base de datos\r\n        const fireBase = getFirebase();\r\n        fireBase.auth().signOut().then(() => {\r\n            dispatch({ type: \"CERRAR_SESION\", estado: true });\r\n        }).catch((error) => {\r\n            dispatch({ type: \"CERRAR_SESION_ERROR\", error });\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction EnlacesLogout() {\r\n    return (\r\n        <div>\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/registrarme\">Registrarme</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/iniciarSesion\">Iniciar Sesion</NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnlacesLogout\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { cerrarSesion } from '../Redux/Acciones/sesionAcciones';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction EnlacesLoginAdministrador(props) {\r\n    return (\r\n        <div>\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/proyectos\">Proyectos</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/clientes\">Clientes</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" onClick={props.cerrarSesion} to=\"/\">Cerrar Sesion</NavLink>\r\n                </li> \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        cerrarSesion: () => { dispatch(cerrarSesion()) }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(EnlacesLoginAdministrador);","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport EnlacesLogin from './EnlacesLogin';\r\nimport EnlacesLogout from './EnlacesLogout';\r\nimport EnlacesLoginAdministrador from './EnlacesLoginAdministrador';\r\nimport { connect } from 'react-redux';\r\nimport { isLoaded, isEmpty } from 'react-redux-firebase';\r\n\r\nfunction Navbar(props) {\r\n\r\n  if (!isLoaded(props.auth)) {\r\n    return <span></span>\r\n  }\r\n\r\n  if (!isLoaded(props.profile)) {\r\n    return <span></span>\r\n  }\r\n\r\n  //return <span>Not Authed, Please Login</span>\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">Navbar</NavLink>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        {isEmpty(props.auth) ?\r\n          <EnlacesLogout />\r\n          :\r\n          props.profile.tipo === 1 ?\r\n            <EnlacesLoginAdministrador />\r\n            :\r\n            props.profile.tipo === 2 ?\r\n              <EnlacesLogin />\r\n              :\r\n              null\r\n        }\r\n\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    uid: state.firebase.auth.uid,\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { iniciarSesion } from '../Redux/Acciones/sesionAcciones';\r\nimport { isEmpty } from 'react-redux-firebase';\r\n\r\nexport class IniciarSesion extends Component {\r\n\r\n    state = {\r\n        correo: \"\",\r\n        contrase√±a: \"\"\r\n    }\r\n\r\n    onSubmit = (evento) => {\r\n        evento.preventDefault();\r\n        this.props.iniciarSesion(this.state);\r\n    }\r\n\r\n    onChange = (evento) => {\r\n        const name = evento.target.name;\r\n        this.setState({\r\n            [name]: evento.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { auth, errorSesion } = this.props;\r\n\r\n        if (isEmpty(auth)) {\r\n            return (\r\n                <div className=\"card container\">\r\n                    {!errorSesion ? null : <div>{errorSesion.message}</div>}\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"email\" name=\"correo\" className=\"form-control\" aria-describedby=\"aydaEmail\" placeholder=\"Ingrese su correo\" onChange={this.onChange} />\r\n                                <small id=\"aydaEmail\" className=\"form-text text-muted\">No compartiremos su correo con nadie.</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" name=\"contrase√±a\" className=\"form-control\" placeholder=\"Contrase√±a\" onChange={this.onChange} />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Iniciar Sesion</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        iniciarSesion: (credenciales) => { dispatch(iniciarSesion(credenciales)) }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorSesion: state.autenticacion.errorSesion,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IniciarSesion);\r\n","export const nuevoCliente = (cliente) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //funcion o acciones asincronas con la base de datos\r\n        //const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        // firebase.auth().createUserWithEmailAndPassword(cliente.correo, cliente.contrase√±a).then((respuesta) => {\r\n        //     return firestore.collection('clientes').doc(respuesta.user.uid).set({\r\n        //         correo: cliente.correo,\r\n        //         nombre: cliente.nombre,\r\n        //         tipo: cliente.tipo\r\n        //     })\r\n        // }).then(() => {\r\n        //     dispatch({ type: \"NUEVO_CLIENTE\", cliente });\r\n        // }).catch((error) => {\r\n        //     dispatch({ type: \"NUEVO_CLIENTE_ERROR\", error });\r\n        // })\r\n\r\n        firestore.collection('clientes').add(\r\n            {\r\n                ...cliente\r\n            }\r\n        ).then(()=>{\r\n            dispatch({ type: \"NUEVO_CLIENTE\", cliente });\r\n        }).catch((error)=>{\r\n            dispatch({ type: \"NUEVO_CLIENTE_ERROR\", error });\r\n        });\r\n    }\r\n}\r\nexport const eliminarCliente = (correo) => {\r\n    return (dispatch, getState) => {\r\n        //funcion o acciones asincronas con la base de datos\r\n        dispatch({ type: \"ELIMINAR_CLIENTE\", correo });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { nuevoCliente } from '../Redux/Acciones/clienteAcciones';\r\nimport { isLoaded } from 'react-redux-firebase';\r\n\r\nexport class Registrarse extends Component {\r\n\r\n    state = {\r\n        nombre: \"\",\r\n        correo: \"\",\r\n        contrase√±a: \"\",\r\n        tipo: 2\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.nuevoCliente(this.state);\r\n        console.log(\"refres!\");\r\n    }\r\n\r\n    onChange = (evento) => {\r\n        const name = evento.target.name;\r\n        this.setState({\r\n            [name]: evento.target.value\r\n        });\r\n    }\r\n\r\n    cancelar = () => {\r\n        this.setState({\r\n            nombre: \"\",\r\n            correo: \"\",\r\n            contrase√±a: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!isLoaded(this.props.auth)) {\r\n            return <span>Cargando...</span>\r\n        }\r\n\r\n        const { nombre, correo, contrase√±a } = this.state;\r\n\r\n        return (\r\n            <div className=\"card container\">\r\n                {this.props.error ? <div>{this.props.error}</div>:null}\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input value={correo} type=\"email\" name=\"correo\" className=\"form-control\" aria-describedby=\"aydaEmail\" placeholder=\"Ingrese su correo\" onChange={this.onChange} />\r\n                            <small id=\"aydaEmail\" className=\"form-text text-muted\">No compartiremos su correo con nadie.</small>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input value={nombre} type=\"text\" name=\"nombre\" className=\"form-control\" placeholder=\"Nombre completo\" onChange={this.onChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input value={contrase√±a} type=\"password\" name=\"contrase√±a\" className=\"form-control\" placeholder=\"Contrase√±a\" onChange={this.onChange} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Registrarme</button>\r\n                    </form>\r\n                    <button className=\"btn btn-danger\" onClick={this.cancelar}>Cancelar</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        nuevoCliente: (cliente) => dispatch(nuevoCliente(cliente))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        error: state.clientes.errorNuevoCliente\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registrarse);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isLoaded } from 'react-redux-firebase';\r\n\r\nfunction Myperfil(props) {\r\n\r\n    if(!isLoaded(props.profile)){\r\n        return (<div>Cargando informacion del cliente...</div>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card container\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">My perfil</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Informacion de la sesion</h6>\r\n                <p className=\"card-text\"> {props.profile.nombre} </p>\r\n                <p className=\"card-text\"> {props.profile.correo} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Myperfil);\r\n","export const nuevoProyecto = (proyecto) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //funcion o acciones asincronas con la base de datos\r\n        const fireStore = getFirestore();\r\n        fireStore.collection('proyectos').add(\r\n            {\r\n                ...proyecto\r\n            }\r\n        ).then(()=>{\r\n            dispatch({ type: \"NUEVO_PROYECTO\", proyecto });\r\n        }).catch((error)=>{\r\n            dispatch({ type: \"NUEVO_PROYECTO_ERROR\", error });\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { nuevoProyecto } from '../Redux/Acciones/proyectoAcciones';\r\nimport { isLoaded } from 'react-redux-firebase';\r\n\r\nexport class NuevoProyecto extends Component {\r\n\r\n    state = {\r\n        nombreProyecto: \"\",\r\n        descripcionProyecto: \"\",\r\n        correoCliente: \"\"\r\n    }\r\n\r\n    onSubmit = (evento) => {\r\n\r\n        evento.preventDefault();\r\n\r\n        const { nuevoProyecto, profile} = this.props;\r\n\r\n        const newProyecto = {\r\n            ...this.state,\r\n            correoCliente: profile.correo\r\n        }\r\n\r\n        nuevoProyecto(newProyecto);\r\n        console.log(\"Termine onSubmit NuevoProyecto\");\r\n    }\r\n\r\n    onChange = (evento) => {\r\n        const name = evento.target.name;\r\n        this.setState({\r\n            [name]: evento.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { error, profile } = this.props;\r\n\r\n        if (!isLoaded(profile)) {\r\n            return <span>Cargando...</span>\r\n        }\r\n\r\n        return (\r\n            <div className=\"card container\">\r\n                {error === null ? null : error ? <div>Error al crear nuevo Proyecto</div> : <div>Nuevo Proyecto guardado con exito!</div>}\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"nombreProyecto\" className=\"form-control\" placeholder=\"Ingrese el nombre del proyecto\" onChange={this.onChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"descripcionProyecto\" className=\"form-control\" placeholder=\"Ingrese la descripcion del proyecto\" onChange={this.onChange} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Crear Proyecto</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        nuevoProyecto: (proyecto) => dispatch(nuevoProyecto(proyecto))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.proyectos.error,\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NuevoProyecto);\r\n","import React from 'react'\r\n\r\nfunction ClienteVista({cliente, index, eliminarCliente}) {\r\n\r\n    const onClick = (evento) =>{\r\n        eliminarCliente(evento.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card container\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Cliente #{index+1}</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Informacion del cliente</h6>\r\n                <p className=\"card-text\"> {cliente.nombre} </p>\r\n                <p className=\"card-text\"> {cliente.correo} </p>\r\n                <button type=\"button\" value={cliente.correo} onClick={onClick} className=\"btn btn-primary\">Eliminar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClienteVista;\r\n","import React, { Component } from 'react';\r\nimport ClienteVista from './ClienteVista';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect, isLoaded } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport {eliminarCliente} from '../Redux/Acciones/clienteAcciones';\r\n\r\nclass ListaClientes extends Component {\r\n    render() {\r\n        const { clientes } = this.props;\r\n\r\n        if(!isLoaded(clientes)){\r\n            return (<div>Cargando informacion de clientes...</div>);\r\n        }\r\n        \r\n        if (clientes.length > 0) {\r\n            return (\r\n                clientes.map((cliente, index) =>\r\n                    <div key={index}>\r\n                        <ClienteVista cliente={cliente} index={index} eliminarCliente={this.props.eliminarCliente} />\r\n                    </div>\r\n                )\r\n            )\r\n        }else{\r\n            console.log(clientes);\r\n            return (<div>No hay clientes!</div>);\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.firestore.ordered.clientes);\r\n    return {\r\n        clientes: state.firestore.ordered.clientes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        eliminarCliente: (correo) => dispatch(eliminarCliente(correo))\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), firestoreConnect([{collection: 'clientes', orderBy: ['nombre', 'desc']}])) (ListaClientes);","import React from 'react';\r\n\r\nfunction ProyectoVista({proyecto}) {\r\n    return (\r\n        <div className=\"card container\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Proyecto #{proyecto.id}</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Informacion del proyecto</h6>\r\n                <p className=\"card-text\">{proyecto.nombreProyecto}</p>\r\n                <p className=\"card-text\"> {proyecto.descripcionProyecto} </p>\r\n                <p className=\"card-text\"> {proyecto.correoCliente} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProyectoVista;\r\n","import React, { Component } from 'react';\r\nimport ProyectoVista from './ProyectoVista';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect, isLoaded } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ListaProyectos extends Component {\r\n\r\n    render() {\r\n\r\n        const { proyectos } = this.props;\r\n\r\n        if(!isLoaded(proyectos)){\r\n            return (<div>Cargando informacion de proyectos...</div>);\r\n        }\r\n\r\n        if (proyectos.length > 0) {\r\n            return (\r\n                proyectos.map(proyecto =>\r\n\r\n                    <div key={proyecto.id}>\r\n                        <Link to={\"/proyecto/\" + proyecto.id}>\r\n                            <ProyectoVista proyecto={proyecto} />\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            )\r\n        } else {\r\n            return (\r\n                <div>No hay proyectos!</div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        proyectos: state.firestore.ordered.proyectos\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: 'proyectos' }])\r\n)(ListaProyectos);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect, isLoaded } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nlet proyecto = null;\r\n\r\nexport class Proyecto extends Component {\r\n\r\n    state = {\r\n        descripcionProyecto: \"\",\r\n        correoCliente: \"\",\r\n        nombreProyecto: \"\",\r\n        id: \"\",\r\n        editar: false\r\n    }\r\n\r\n    onChange = (evento) =>{\r\n        const name = evento.target.name;\r\n        this.setState({\r\n            [name]: evento.target.value\r\n        })\r\n    }\r\n\r\n    guardarProyecto = (evento) => {\r\n        console.log(this.state);\r\n    }\r\n\r\n    canelarActualizacion = (evento) => {\r\n        evento.preventDefault();\r\n        this.setState({\r\n            editar: false\r\n        })\r\n    }\r\n\r\n    editarProyecto = (evento) =>{\r\n        evento.preventDefault();\r\n        this.setState({\r\n            editar: true,\r\n            descripcionProyecto: proyecto.descripcionProyecto,\r\n        correoCliente: proyecto.correoCliente,\r\n        nombreProyecto: proyecto.nombreProyecto,\r\n        id: this.props.id,\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id, proyectos } = this.props;\r\n        const {editar, nombreProyecto, descripcionProyecto, correoCliente} = this.state;\r\n\r\n        if(!isLoaded(proyectos)){\r\n            return (<div>Cargando...</div>);\r\n        }\r\n\r\n        let myProyecto = null ;\r\n\r\n        if (proyectos) {\r\n            myProyecto = proyectos[id];\r\n            proyecto = myProyecto;\r\n        }else{\r\n            return (<div>No existe el proyecto!!</div>);\r\n        }\r\n\r\n        if (myProyecto) {\r\n            if(editar){\r\n                return (\r\n                    <div className=\"card container\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Proyecto #{id}</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Informacion del proyecto</h6>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"nombreProyecto\" value={nombreProyecto} className=\"form-control\" placeholder=\"Ingrese el nombre del proyecto\" onChange={this.onChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"descripcionProyecto\" value={descripcionProyecto} className=\"form-control\" placeholder=\"Ingrese la descripcion del proyecto\" onChange={this.onChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" name=\"correoCliente\" value={correoCliente} className=\"form-control\" placeholder=\"Ingrese la descripcion del proyecto\" onChange={this.onChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={this.guardarProyecto}>Guardar</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={this.canelarActualizacion}>Cancelar</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            return (\r\n                <div className=\"card container\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Proyecto #{id}</h5>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">Informacion del proyecto</h6>\r\n                        <p className=\"card-text\"> {proyecto.nombreProyecto} </p>\r\n                        <p className=\"card-text\"> {proyecto.descripcionProyecto} </p>\r\n                        <p className=\"card-text\"> {proyecto.correoCliente} </p>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.editarProyecto}>Editar</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div>No existe el proyecto!</div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        id : props.match.params.id,\r\n        proyectos : state.firestore.data.proyectos\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps), firestoreConnect([{ collection: 'proyectos' }]))(Proyecto);\r\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { isLoaded, isEmpty } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar';\nimport IniciarSesion from './components/sesion/IniciarSesion';\nimport Registrarse from './components/sesion/Registrarse';\nimport MyPerfil from './components/cliente/Myperfil';\nimport NuevoProyecto from './components/cliente/NuevoProyecto';\nimport ListaClientes from './components/administrador/ListaClientes';\nimport ListaProyectos from './components/administrador/ListaProyectos';\nimport Proyecto from './components/administrador/Proyecto';\n\nimport './App.css'\n\nclass App extends Component {\n\n  render() {\n    console.log(\"render App\")\n    if (!isLoaded(this.props.auth)) {\n      return <span>Cargando pagina...</span>\n    }\n\n    if (!isLoaded(this.props.profile)) {\n      return <span>Cargando pagina...</span>\n    }\n\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          {isEmpty(this.props.auth) ?\n            <Switch>\n              <Route exact path=\"/iniciarSesion\" component={IniciarSesion} />\n              <Route path=\"/registrarme\" component={Registrarse} />\n              <Route path=\"/\" render={() => <Redirect to=\"/iniciarSesion\" />} />\n            </Switch>\n            :\n            this.props.profile.tipo === 1 ?\n              <Switch>\n                <Route exact path=\"/\" component={ListaClientes} />\n                <Route exact path=\"/clientes\" component={ListaClientes} />\n                <Route exact path=\"/proyectos\" component={ListaProyectos} />\n                <Route exact path=\"/proyecto/:id\" component={Proyecto} />\n                <Route path=\"/\" render={() => <Redirect to=\"/\" />} />\n              </Switch>\n              :\n              this.props.profile.tipo === 2 ?\n                <Switch>\n                  <Route exact path=\"/\" component={MyPerfil} />\n                  <Route exact path=\"/myPerfil\" component={MyPerfil} />\n                  <Route exact path=\"/nuevoProyecto\" component={NuevoProyecto} />\n                  <Route exact path=\"/myProyectos\" component={MyPerfil} />\n                  <Route path=\"/\" render={() => <Redirect to=\"/\" />} />\n                </Switch>\n                :\n                null\n          }\n        </div>\n      </BrowserRouter>\n    )\n\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAK_YeKZTf37CgvWH_cHxWgJ8s0cobhAOU\",\r\n    authDomain: \"app-react-firebase-921d3.firebaseapp.com\",\r\n    databaseURL: \"https://app-react-firebase-921d3.firebaseio.com\",\r\n    projectId: \"app-react-firebase-921d3\",\r\n    storageBucket: \"app-react-firebase-921d3.appspot.com\",\r\n    messagingSenderId: \"105915742973\",\r\n    appId: \"1:105915742973:web:20e4b89a66f88c722fdc94\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","const iniState = {\r\n    correo: \"\",\r\n    contrase√±a: \"\",\r\n    errorSesion: null,\r\n    errorCerrarSesion: null\r\n}\r\n\r\nconst autenticacionReducer = (state = iniState, action) => {\r\n    switch (action.type) {\r\n        case 'INICIAR_SESION':\r\n            console.log(\"sesion iniciada correctamente\");\r\n            console.log(action.credenciales);\r\n            return {\r\n                ...state,\r\n                errorSesion: null\r\n            }\r\n\r\n        case 'INICIAR_SESION_ERROR':\r\n            console.log(\"fallo al iniciar sesion\");\r\n            console.log(action.error);\r\n            return {\r\n                ...state,\r\n                errorSesion: action.error\r\n            }\r\n\r\n        case 'CERRAR_SESION_ERROR':\r\n            console.log(\"fallo al cerrar sesion\");\r\n            return {\r\n                ...state,\r\n                errorCerrarSesion: true\r\n            }\r\n\r\n        case 'CERRAR_SESION':\r\n            console.log(\"sesion cerrada exitosamente!\");\r\n            return {\r\n                ...state,\r\n                errorCerrarSesion: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default autenticacionReducer;","const iniState = {\r\n    error: null,\r\n    listaProyectos: [\r\n        { id: 1, nombreProyecto: \"App en Angular\", descripcionProyecto: \"Aplicacion realizada en Angular\", correoCliente: \"ayneer12@gmail.com\" },\r\n        { id: 2, nombreProyecto: \"API REST en Node\", descripcionProyecto: \"Servidor creado en Node\", correoCliente: \"luis@gmail.com\" },\r\n        { id: 3, nombreProyecto: \"App en React y Firebase\", descripcionProyecto: \"Aplicacion realizada bajo React y Firebase\", correoCliente: \"ayneer12@gmail.com\" }\r\n    ]\r\n}\r\n\r\nconst proyectosReducer = (state = iniState, action) => {\r\n    switch (action.type) {\r\n        case 'NUEVO_PROYECTO':\r\n            console.log(action.proyecto);\r\n            return {\r\n                ...state,\r\n                error: false\r\n            }\r\n\r\n        case 'NUEVO_PROYECTO_ERROR':\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default proyectosReducer;","const iniState = {\r\n    errorNuevoCliente: null,\r\n    listaClientes: [\r\n        { correo: \"ayneer12@gmail.com\", nombre: \"Ayneer Luis Gonzalez Geles\" },\r\n        { correo: \"luis@gmail.com\", nombre: \"Luis Perez Castro\" }\r\n    ]\r\n}\r\n\r\nconst clientesReducer = (state = iniState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'NUEVO_CLIENTE':\r\n            return {\r\n                ...state,\r\n                errorNuevoCliente: false\r\n            }\r\n        case 'NUEVO_CLIENTE_ERROR':\r\n            return {\r\n                ...state,\r\n                errorNuevoCliente: action.error.message\r\n            }\r\n\r\n        case 'ELIMINAR_CLIENTE':\r\n            console.log(action.correo);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default clientesReducer;","import { combineReducers } from 'redux';\r\nimport autenticacionReducer from './autenticacionReducer';\r\nimport proyectosReducer from './proyectosReducer';\r\nimport clientesReducer from './clientesReducer';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    autenticacion: autenticacionReducer,\r\n    proyectos: proyectosReducer,\r\n    clientes: clientesReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Root component\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n//Redux\n//applyMiddleware para trabajar de acciones de forma asincrona\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\n\n//thunk para trabajar de acciones de forma asincrona\nimport thunk from 'redux-thunk';\n\nimport { getFirestore, reduxFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport configFireBase from '../src/configuracion/configFireBase';\nimport rootReducer from './components/Redux/reducers/rootReducer';\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(configFireBase, { attachAuthIsReady: true })\n));\n\nconst reduxFirebaseConfig = {\n    useFirestoreForProfile: true,\n    userProfile: 'clientes',\n};\n\nconst rrfProps = { firebase: configFireBase, config: reduxFirebaseConfig, dispatch: store.dispatch, createFirestoreInstance}\n\nReactDOM.render(<Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n        <App/>\n    </ReactReduxFirebaseProvider>\n</Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}